---
name: CI
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
concurrency:
  group: ci-${{ github.head_ref }}
  cancel-in-progress: true
env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"
jobs:
  tests:
    name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
    permissions:
      contents: read
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Hatch
      run: pip install --upgrade hatch
    - name: Run static analysis
      if: matrix.os == 'ubuntu-latest' && (matrix.python-version == '3.8' || matrix.python-version == '3.13')
      run: |
          hatch run +py=${{ matrix.python-version }} test:style
    - name: Run tests
      run: hatch run +py=${{ matrix.python-version }} test:test
    - name: Let's see what's going on
      shell: bash
      run: ls -la .
    - name: Upload coverage files
      uses: actions/upload-artifact@v4.6.2
      with:
        name: coverage-${{ matrix.os }}-${{ matrix.python-version }}
        path: .coverage*
        retention-days: 1
        include-hidden-files: true
  coverage:
    name: Coverage Report
    needs:
      - tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version-file: '.python-version'
      - name: Setup uv
        id: setup-uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Restore cache
        if: steps.setup-uv.outputs.cache-hit == 'true'
        run: echo "Cache was restored"
      - name: Download coverage files
        uses: actions/download-artifact@v5
        with:
          pattern: coverage*
          merge-multiple: true
      - name: Install coverage
        run: uv tool install coverage[toml]
      - name: Coverage Report
        run: |
          uv tool run coverage combine
          uv tool run coverage report
          uv tool run coverage xml
      - name: Upload Coverage
        uses: codecov/codecov-action@v5.5.0
        with:
          files: coverage.xml
